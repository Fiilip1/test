{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\OneDrive\\\\\\u0420\\u0430\\u0434\\u043D\\u0430 \\u043F\\u043E\\u0432\\u0440\\u0448\\u0438\\u043D\\u0430\\\\test\\\\01-starting-setup\\\\src\\\\store\\\\AddProduct.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Example() {\n  _s();\n  const [data, setData] = useState({});\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('https://dummyjson.com/products/add', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const result = await response.json();\n    console.log(result);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setData({\n        ...data,\n        name: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(Example, \"0PQhZyvNHTQmyp/cNfIsZk8MtX8=\");\n_c = Example;\nexport default Example;\n\n// import  { useContext, useRef } from 'react';\n\n// async function AddProductHandler(product) {\n//   const response = await fetch('https://dummyjson.com/products/add', {\n//     method: 'POST',\n//     body: JSON.stringify(product),\n//     headers: {\n//       'Content-Type': 'application/json'\n//     }\n//   });\n//   const data = await response.json();\n//   console.log(data);\n\n// }\n\n// function AddProduct() {\n\n//   const [items, setItems] = useContext\n\n//   const titleRef = useRef('');\n//   const descriptionRef = useRef('');\n//   const brandRef = useRef('');\n\n//   function submitHandler(event) {\n//     event.preventDefault();\n\n//     const product = {\n//       title: titleRef.title,\n//       description: descriptionRef.description,\n//       brand: brandRef.brand,\n//     };\n\n//     setItems(product);\n//   }\n\n//   return (\n//     <form onSubmit={submitHandler} items={i}>\n//       <div>\n//         <label htmlFor='title'>Title</label>\n//         <input type='text' id='title' ref={titleRef} />\n//       </div>\n//       <div >\n//         <label htmlFor='description'>Descrption</label>\n//         <textarea rows='5' id='description' ref={descriptionRef}></textarea>\n//       </div>\n//       <div>\n//         <label htmlFor='brand'>Release Date</label>\n//         <input type='text' id='brand' ref={brandRef} />\n//       </div>\n//       <button onClick={AddProductHandler}>Add Movie</button>\n//     </form>\n//   );\n// }\n\n// export default AddProduct;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Example","_s","data","setData","handleSubmit","e","preventDefault","response","fetch","method","body","JSON","stringify","headers","result","json","console","log","onSubmit","children","type","onChange","name","target","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Acer/OneDrive/Радна површина/test/01-starting-setup/src/store/AddProduct.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Example() {\r\n  const [data, setData] = useState({});\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const response = await fetch('https://dummyjson.com/products/add', {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const result = await response.json();\r\n    console.log(result);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" onChange={e => setData({...data, name: e.target.value})} />\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Example;\r\n\r\n\r\n\r\n\r\n\r\n// import  { useContext, useRef } from 'react';\r\n\r\n// async function AddProductHandler(product) {\r\n//   const response = await fetch('https://dummyjson.com/products/add', {\r\n//     method: 'POST',\r\n//     body: JSON.stringify(product),\r\n//     headers: {\r\n//       'Content-Type': 'application/json'\r\n//     }\r\n//   });\r\n//   const data = await response.json();\r\n//   console.log(data);\r\n\r\n// }\r\n\r\n// function AddProduct() {\r\n\r\n//   const [items, setItems] = useContext\r\n\r\n\r\n//   const titleRef = useRef('');\r\n//   const descriptionRef = useRef('');\r\n//   const brandRef = useRef('');\r\n\r\n//   function submitHandler(event) {\r\n//     event.preventDefault();\r\n\r\n    \r\n//     const product = {\r\n//       title: titleRef.title,\r\n//       description: descriptionRef.description,\r\n//       brand: brandRef.brand,\r\n//     };\r\n\r\n//     setItems(product);\r\n//   }\r\n\r\n//   return (\r\n//     <form onSubmit={submitHandler} items={i}>\r\n//       <div>\r\n//         <label htmlFor='title'>Title</label>\r\n//         <input type='text' id='title' ref={titleRef} />\r\n//       </div>\r\n//       <div >\r\n//         <label htmlFor='description'>Descrption</label>\r\n//         <textarea rows='5' id='description' ref={descriptionRef}></textarea>\r\n//       </div>\r\n//       <div>\r\n//         <label htmlFor='brand'>Release Date</label>\r\n//         <input type='text' id='brand' ref={brandRef} />\r\n//       </div>\r\n//       <button onClick={AddProductHandler}>Add Movie</button>\r\n//     </form>\r\n//   );\r\n// }\r\n\r\n// export default AddProduct;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpC,MAAMO,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;MACjEC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,IAAI,CAAC;MAC1BW,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,MAAMC,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IACpCC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;EACrB,CAAC;EAED,oBACEf,OAAA;IAAMmB,QAAQ,EAAEd,YAAa;IAAAe,QAAA,gBAC3BpB,OAAA;MAAOqB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEhB,CAAC,IAAIF,OAAO,CAAC;QAAC,GAAGD,IAAI;QAAEoB,IAAI,EAAEjB,CAAC,CAACkB,MAAM,CAACC;MAAK,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9E7B,OAAA;MAAQqB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEX;AAAC3B,EAAA,CAtBQD,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AAwBhB,eAAeA,OAAO;;AAMtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}