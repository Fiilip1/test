{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst PhoneSlice = createSlice({\n  name: \"products\",\n  initialState: {\n    items: [],\n    count: 0,\n    isLoading: false\n  },\n  reducers: {\n    setProducts: (state, action) => {\n      state.items = action.payload;\n      state.count = 9;\n      state.isLoading = false;\n    },\n    deleteProduct: (state, action) => {\n      const DeleteId = action.payload;\n      state.items = state.items.filter(product => product.id !== DeleteId);\n    },\n    updateProduct: (state, action) => {\n      const editedProduct = action.payload;\n      const key = state.items.findIndex(product => product.id === editedProduct);\n      if (key !== -1) {\n        state.items[key].title = editedProduct.title;\n        state.items[key].description = editedProduct.description;\n        state.items[key].brand = editedProduct.brand;\n      }\n    }\n  }\n});\nexport const {\n  addProduct,\n  deleteProduct,\n  updateProduct\n} = PhoneSlice.actions;\nexport default PhoneSlice.reducer;","map":{"version":3,"names":["createSlice","PhoneSlice","name","initialState","items","count","isLoading","reducers","setProducts","state","action","payload","deleteProduct","DeleteId","filter","product","id","updateProduct","editedProduct","key","findIndex","title","description","brand","addProduct","actions","reducer"],"sources":["C:/Users/Acer/OneDrive/Радна површина/test/01-starting-setup/src/store/PhoneSLice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst PhoneSlice = createSlice({\r\n    name: \"products\",\r\n    initialState: {\r\n        items: [],\r\n        count: 0,\r\n        isLoading: false\r\n    }, reducers: {\r\n\r\n        setProducts: (state, action) => {\r\n        \r\n                state.items = action.payload;\r\n                state.count = 9;\r\n                state.isLoading = false;\r\n\r\n        },\r\n\r\n    \r\n        deleteProduct: (state, action) => {\r\n            const DeleteId = action.payload\r\n            state.items = state.items.filter((product) => product.id !== DeleteId)\r\n        },\r\n\r\n        updateProduct: (state, action) => {\r\n            const editedProduct = action.payload;\r\n            const key = state.items.findIndex((product) => product.id === editedProduct)\r\n\r\n            if (key !== -1) {\r\n                state.items[key].title = editedProduct.title\r\n                state.items[key].description = editedProduct.description\r\n                state.items[key].brand = editedProduct.brand\r\n            }\r\n        }\r\n\r\n        }\r\n\r\n       \r\n    })\r\n\r\n        export const { addProduct, deleteProduct, updateProduct} = PhoneSlice.actions\r\n\r\n        export default PhoneSlice.reducer\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,UAAU,GAAGD,WAAW,CAAC;EAC3BE,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,CAAC;IACRC,SAAS,EAAE;EACf,CAAC;EAAEC,QAAQ,EAAE;IAETC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAExBD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;MAC5BF,KAAK,CAACJ,KAAK,GAAG,CAAC;MACfI,KAAK,CAACH,SAAS,GAAG,KAAK;IAE/B,CAAC;IAGDM,aAAa,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC9B,MAAMG,QAAQ,GAAGH,MAAM,CAACC,OAAO;MAC/BF,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACU,MAAM,CAAEC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKH,QAAQ,CAAC;IAC1E,CAAC;IAEDI,aAAa,EAAEA,CAACR,KAAK,EAAEC,MAAM,KAAK;MAC9B,MAAMQ,aAAa,GAAGR,MAAM,CAACC,OAAO;MACpC,MAAMQ,GAAG,GAAGV,KAAK,CAACL,KAAK,CAACgB,SAAS,CAAEL,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKE,aAAa,CAAC;MAE5E,IAAIC,GAAG,KAAK,CAAC,CAAC,EAAE;QACZV,KAAK,CAACL,KAAK,CAACe,GAAG,CAAC,CAACE,KAAK,GAAGH,aAAa,CAACG,KAAK;QAC5CZ,KAAK,CAACL,KAAK,CAACe,GAAG,CAAC,CAACG,WAAW,GAAGJ,aAAa,CAACI,WAAW;QACxDb,KAAK,CAACL,KAAK,CAACe,GAAG,CAAC,CAACI,KAAK,GAAGL,aAAa,CAACK,KAAK;MAChD;IACJ;EAEA;AAGJ,CAAC,CAAC;AAEE,OAAO,MAAM;EAAEC,UAAU;EAAEZ,aAAa;EAAEK;AAAa,CAAC,GAAGhB,UAAU,CAACwB,OAAO;AAE7E,eAAexB,UAAU,CAACyB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}